<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="HouseMapper">

<!-- 매물 등록 - house_info 테이블 -->
	<insert id="houseRegister_info" parameterType="HouseInfoDTO">
		insert into house_info (hcode, htype, rtype, hname, addr, coordx, coordy, area, whlflr, flr, room, batr, cntwish, himage, hetc, registerdate, agntid)
		values (#{hcode}, #{htype}, #{rtype}, #{hname}, #{addr}, 'null', 'null', #{area}, #{whlflr}, #{flr}, #{room}, #{batr}, 0, #{himage}, #{hetc}, sysdate, #{agntid})
	</insert>
	
<!-- 매물 등록 - house_price 테이블 -->
	<insert id="houseRegister_price" parameterType="HousePriceDTO">
		insert into house_price (hcode, deposit, mrent, yrent, maintc, parkf)
		values (#{hcode}, #{deposit}, #{mrent}, #{yrent}, #{maintc}, #{parkf})
	</insert>
	
<!-- 매물 등록 - house_option 테이블 -->
<!-- 	<insert id="houseRegister_option" parameterType="HousePriceDTO"> -->
<!-- 		insert into house_option (hcode, bltin, elev, pet, vrd, loan, park, mdate, etc)  -->
<!-- 		values (#{hcode}, -->
<!-- 			<choose> -->
<!-- 				<when test="bltin != 'Y' "> 'N' </when> -->
<!-- 				<when test = "bltin == 'Y' ">  #{bltin} </when> -->
<!-- 				<when test="elev != 'Y' "> 'N'</when> -->
<!-- 				<when test="elev == 'Y'">  #{elev} </when> -->
<!-- 				<when test="pet != 'Y' "> 'N' </when> -->
<!-- 				<when test="pet == 'Y'">  #{pet} </when> -->
<!-- 				<when test="vrd != 'Y' ">'N' </when> -->
<!-- 				<when test="vrd == 'Y'"> #{vrd}  </when> -->
<!-- 				<when test="loan != 'Y' "> 'N' </when> -->
<!-- 				<when test="loan == 'Y'"> #{loan} </when> -->
<!-- 				<when test="park != 'Y' "> 'N' </when> -->
<!-- 				<when test="park == 'Y'"> #{park} </when> -->
<!-- 				<when test="mdate != 'Y' "> 'N' </when> -->
<!-- 				<when test="mdate == 'Y'"> #{mdate} </when> -->
<!-- 			</choose> -->
<!-- 		#{etc}) -->
<!-- 	</insert> -->

<!-- houseRegister.jsp에서 가장 최근 등록된 매물 코드 가져오기 (매물타입별) -->
	<select id="getLastCode" parameterType="string" resultType="string">
		select max(hcode) from house_info where htype = #{htype}
	</select>

<!-- housePanel.jsp에서 agent별 매물 리스트 -->
	<select id="houseByAgent" parameterType="string" resultType="hashmap">
		select hcode, rtype, addr, deposit, mrent, registerdate
		from house_info join house_price using(hcode)
		where agntid = #{agntid}
	</select>


<!-- houseList.jsp 검색해서 나오는 매물 w paging  -->
	<select id="searchList" parameterType="string" resultType="hashmap">
		select hcode, htype, rtype, hname, area, flr, hetc, deposit, mrent, yrent, maintc
		from house_info join house_price using(hcode)
		where addr like '%'||#{search}||'%' or hname like
		'%'||#{search}||'%'
	</select>
	
<!-- houseList.jsp  검색해서 나오는 개수 for paging  -->
	<select id="totalListBySearch" parameterType="string" resultType="int">
		select count(*)
		from house_info join house_price using(hcode)
		where addr like '%'||#{search}||'%' or hname like
		'%'||#{search}||'%'
	</select>

<!-- houseOverview.jsp에서 신매물 최근 3일기준 w/o paging  -->
	<select id="retrieveNewItems" resultType="hashmap">
		select hcode, htype, rtype, hname, area, coordx, coordy, flr, hetc, deposit, mrent, yrent, maintc
		from house_info join house_price using(hcode)
		where registerdate > sysdate-3
	</select>

<!-- houseOverview.jsp에서 핫매물 cntwish 기준   w/o paging -->
	<select id="retrieveHotItems" resultType="hashmap">
		select hcode, htype, rtype, hname, area, coordx, coordy, flr, hetc, deposit, mrent, yrent, maintc
		from house_info join house_price using(hcode)
		where cntwish > (select
		max(cntwish) - 3 from house_info)
		order by cntwish desc
	</select>

<!-- houseOverview.jsp&houseList.jsp 에서 필터 버튼으로 리스트 불러올때 w paging  -->
	<select id="listByFilter" parameterType="hashmap" resultType="hashmap">
		select hcode, htype, rtype, hname, area, flr, hetc, deposit, mrent, yrent, maintc
		from house_info join house_price using(hcode)
		<choose>
			<when test="!(htype.isEmpty())">
				where htype in
				<foreach item="item" collection="htype" open="(" separator="," close=")">
					#{item}
				</foreach>
				<if test=" !(rtype.isEmpty())">
					and rtype in
					<foreach item="item" collection="rtype" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test=" !(maintc.isEmpty())">
					and maintc &lt; 
					<foreach item="item" collection="maintc">
						#{item}
					</foreach>
				</if>
				<if test="!(mrent.isEmpty())">
					and mrent between 
					<foreach item="item" collection="mrent" separator="and">
						#{item}
					</foreach>
				</if>
				<if test="!(yrent.isEmpty())">
					and yrent &lt; 
					<foreach item="item" collection="yrent">
						#{item}
					</foreach>
				</if>
			</when>
			<when test="!(rtype.isEmpty())">
				where rtype in
				<foreach item="item" collection="rtype" open="(" separator="," close=")">
					#{item}
				</foreach>
				<if test="!(htype.isEmpty())">
					and htype in
					<foreach item="item" collection="htype" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test=" !(maintc.isEmpty())">
					and maintc &lt;
					<foreach item="item" collection="maintc">
						#{item}
					</foreach>
				</if>
				<if test="!(mrent.isEmpty())">
					and mrent between 
					<foreach item="item" collection="mrent" separator="and">
						#{item}
					</foreach>
				</if>
				<if test="!(yrent.isEmpty())">
					and yrent &lt; 
					<foreach item="item" collection="yrent">
						#{item}
					</foreach>
				</if>
			</when>
			<when test="!(maintc.isEmpty())">
				where maintc &lt; 
				<foreach item="item" collection="maintc">
					#{item}
				</foreach>
				<if test="!(htype.isEmpty())">
					and htype in
					<foreach item="item" collection="htype" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test=" !(rtype.isEmpty())">
					and rtype in
					<foreach item="item" collection="rtype" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test="!(mrent.isEmpty())">
					and mrent between 
					<foreach item="item" collection="mrent" separator="and">
						#{item}
					</foreach>
				</if>
				<if test="!(yrent.isEmpty())">
					and yrent &lt; 
					<foreach item="item" collection="yrent">
						#{item}
					</foreach>
				</if>
			</when>
			<when test="!(mrent.isEmpty())">
				where mrent between 
				<foreach item="item" collection="mrent" separator="and">
					#{item}
				</foreach>
				<if test="!(htype.isEmpty())">
					and htype in
					<foreach item="item" collection="htype" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test=" !(rtype.isEmpty())">
					and rtype in
					<foreach item="item" collection="rtype" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test=" !(maintc.isEmpty())">
					and maintc &lt;
					<foreach item="item" collection="maintc">
						#{item}
					</foreach>
				</if>
				<if test="!(yrent.isEmpty())">
					and yrent &lt; 
					<foreach item="item" collection="yrent">
						#{item}
					</foreach>
				</if>
			</when>
			<when test="!(yrent.isEmpty())">
				where yrent &lt; 
				<foreach item="item" collection="yrent">
					#{item}
				</foreach>
				<if test="!(htype.isEmpty())">
					and htype in
					<foreach item="item" collection="htype" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test=" !(rtype.isEmpty())">
					and rtype in
					<foreach item="item" collection="rtype" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test=" !(maintc.isEmpty())">
					and maintc &lt; 
					<foreach item="item" collection="maintc">
						#{item}
					</foreach>
				</if>
				<if test="!(mrent.isEmpty())">
					and mrent between 
					<foreach item="item" collection="mrent" separator="and">
						#{item}
					</foreach>
				</if>
			</when>
		</choose>
	</select>

<!-- houseOverview.jsp&houseList.jsp 에서 필터 버튼으로 리스트 불로오는 개수 for paging  -->
	<select id="totalListByFilter" parameterType="hashmap" resultType="int">
		select count(*)
		from house_info join house_price using(hcode)
		<choose>
			<when test="!(htype.isEmpty())">
				where htype in
				<foreach item="item" collection="htype" open="(" separator="," close=")">
					#{item}
				</foreach>
				<if test=" !(rtype.isEmpty())">
					and rtype in
					<foreach item="item" collection="rtype" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test=" !(maintc.isEmpty())">
					and maintc &lt; 
					<foreach item="item" collection="maintc">
						#{item}
					</foreach>
				</if>
				<if test="!(mrent.isEmpty())">
					and mrent between 
					<foreach item="item" collection="mrent" separator="and">
						#{item}
					</foreach>
				</if>
				<if test="!(yrent.isEmpty())">
					and yrent &lt; 
					<foreach item="item" collection="yrent">
						#{item}
					</foreach>
				</if>
			</when>
			<when test="!(rtype.isEmpty())">
				where rtype in
				<foreach item="item" collection="rtype" open="(" separator="," close=")">
					#{item}
				</foreach>
				<if test="!(htype.isEmpty())">
					and htype in
					<foreach item="item" collection="htype" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test=" !(maintc.isEmpty())">
					and maintc &lt;
					<foreach item="item" collection="maintc">
						#{item}
					</foreach>
				</if>
				<if test="!(mrent.isEmpty())">
					and mrent between 
					<foreach item="item" collection="mrent" separator="and">
						#{item}
					</foreach>
				</if>
				<if test="!(yrent.isEmpty())">
					and yrent &lt; 
					<foreach item="item" collection="yrent">
						#{item}
					</foreach>
				</if>
			</when>
			<when test="!(maintc.isEmpty())">
				where maintc &lt; 
				<foreach item="item" collection="maintc">
					#{item}
				</foreach>
				<if test="!(htype.isEmpty())">
					and htype in
					<foreach item="item" collection="htype" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test=" !(rtype.isEmpty())">
					and rtype in
					<foreach item="item" collection="rtype" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test="!(mrent.isEmpty())">
					and mrent between 
					<foreach item="item" collection="mrent" separator="and">
						#{item}
					</foreach>
				</if>
				<if test="!(yrent.isEmpty())">
					and yrent &lt; 
					<foreach item="item" collection="yrent">
						#{item}
					</foreach>
				</if>
			</when>
			<when test="!(mrent.isEmpty())">
				where mrent between 
				<foreach item="item" collection="mrent" separator="and">
					#{item}
				</foreach>
				<if test="!(htype.isEmpty())">
					and htype in
	
	
	
	
					<foreach item="item" collection="htype" open="(" separator="," close=")">
	
	
	
	
	
							#{item}
					</foreach>
				</if>
				<if test=" !(rtype.isEmpty())">
					and rtype in
					<foreach item="item" collection="rtype" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test=" !(maintc.isEmpty())">
					and maintc &lt;
					<foreach item="item" collection="maintc">
						#{item}
					</foreach>
				</if>
				<if test="!(yrent.isEmpty())">
					and yrent &lt; 
					<foreach item="item" collection="yrent">
						#{item}
					</foreach>
				</if>
			</when>
			<when test="!(yrent.isEmpty())">
				where yrent &lt; 
				<foreach item="item" collection="yrent">
					#{item}
				</foreach>
				<if test="!(htype.isEmpty())">
					and htype in
					<foreach item="item" collection="htype" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test=" !(rtype.isEmpty())">
					and rtype in
					<foreach item="item" collection="rtype" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test=" !(maintc.isEmpty())">
					and maintc &lt; 
					<foreach item="item" collection="maintc">
						#{item}
					</foreach>
				</if>
				<if test="!(mrent.isEmpty())">
					and mrent between 
					<foreach item="item" collection="mrent" separator="and">
						#{item}
					</foreach>
				</if>
			</when>
		</choose>
	</select>
	
	
	<!-- Basic : House 자세히보기 -->
   	<select id="houseRetrieve" parameterType="String" resultType="HouseInfoDTO">
   		select hcode, htype, rtype, hname, addr, coordX, coordY, area, whlflr, flr, room, batr
   			cntwish, himage, hetc, registerDate, agntid
   		from house_info
   		where hcode = #{hcode}
   	</select>
	
	<!-- Basic : House 가격 -->
   	<select id = "housePrice" parameterType="string" resultType = "HousePriceDTO">
   		select hcode, deposit, mrent, yrent, maintc, parkf
   		from house_price
   		where hcode = #{hcode}
   	</select> 
   	
	<!-- Basic : House 옵션 -->
   	<select id = "houseOption" parameterType="string" resultType = "HouseOptionDTO">
   		select bltin, elev, pet, vrd, loan, park, mdate, etc
   		from house_option
   		where hcode = #{hcode}
   	</select> 
	
	
	<!-- 최근 본 House 테이블보기 -->
	<select id="rcnList" parameterType="string" resultType="HouseRcnlistDTO">
   		select num,userid,hcode
   		from rcnlist
   		where userid = #{userid}
   	</select>
   	
   	<!-- 최근 본 House DB 데이터 저장 -->
   	<insert id="rcnInsertAll" parameterType="list">
    	insert all
    		<foreach item="item" collection="list" >
       		 	into rcnlist (num, userid, hcode)
       		 	values(#{item.num}, #{item.userid},#{item.hcode})
  			</foreach>
  			select * from dual
    </insert>
    
    <!-- 최근 본 House DB 데이터 삭제 -->
   	<delete id="rcnDelete" parameterType="list">                                                                                                                                                                                                                                                                                                                                                    	
   		delete 
    	from rcnlist
    	<where>
    		num in
    		<foreach item="item" collection="list" open="(" separator="," close=")">
       		 	#{item}
  			</foreach>
    	</where>
   	</delete>
   	
   	<!-- 최근 본 / 찜한 House 리스트 보기 -->
   	<select id="rcnHouseList" parameterType="list" resultType="hashmap">
   		select hcode, htype, rtype, hname, area, flr, hetc, deposit, mrent, yrent, maintc
		from house_info join house_price using(hcode)
   		<where>
    		hcode in
    		<foreach item="item" collection="list" open="(" separator="," close=")">
       		 	#{item}
  			</foreach>
    	</where>
   	</select>
   	
   	
   	<!-- 찜 한 House 테이블보기 -->
	<select id="wishList" parameterType="string" resultType="HouseWishlistDTO">
   		select userid,hcode
   		from wishlist
   		where userid = #{userid}
   	</select>
</mapper>
  	